@page "/"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager
@inject NumberingHelper numberingHelper
<PageTitle>Main Page</PageTitle>
<div>
    <div class="home-container">
        <div class="home-navbar">
            <header data-role="Header" class="home-header max-width-container">
                <span class="navbar-logo-title home-logo-center">ARTURIK</span>
            </header>
        </div>
        <div class="home-hero section-container">
            <div class="home-max-width max-width-container">
                <div class="home-hero1">
                    <div class="home-container1">
                        <div class="home-info">
                            <span class="home-text">
                                <span>No profit app</span>
                                <br />
                                <span>just for fun!</span>
                                <br />
                            </span>
                        </div>
                        <h1 class="home-text05">
                            <span>ANIMATIONS</span>
                            <br />
                            <span>for KIDS</span>
                            <br />
                        </h1>
                        <input type="text"
                               placeholder="One play limit"
                               class="home-textinput input"
                               @bind=numberingHelper.MaxLimit />
                        <div class="home-btn-group">
                            <button class="home-button button" @onclick=@(()=>NavigateToNextAnimation(true))>
                                Explore animations
                            </button>
                        </div>
                        <div class="home-btn-group1">
                            <button class="home-button1 button" @onclick=@(()=>NavigateToNextAnimation(false))>
                                Explore "BALI" the cat
                            </button>
                        </div>
                    </div>
                    <lottie-player src="@navigationManager.BaseUri/lottie/frontPageCatAnimation.json" class="home-image1" speed="1" loop autoplay></lottie-player>
                </div>
                <span class="home-text10">
                    <a href="credit">Credit</a>
                </span>
                @if (isHomeScreenRecommendationDisplayed)
                {
                    <span>TESTING</span>
                }
                <UpdateAvailableDetector></UpdateAvailableDetector>
            </div>
        </div>
    </div>
</div>
@code {
    public int lottieFileNumber { get; set; } = 1;
    private static bool isHomeScreenRecommendationDisplayed = false;

    [JSInvokable]
    public static void ShowHomeScreenRecommendation(bool isStandalone)
    {
        isHomeScreenRecommendationDisplayed = isStandalone;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            string pathTodetectionPWAJs = $"{navigationManager.BaseUri}/scripts/detectionPWA.js";
            await JSRuntime.InvokeAsync<IJSObjectReference>("import", pathTodetectionPWAJs);

        }
    }
    protected override void OnInitialized()
    {
        // initialize the NumberOfAnimationPlayed with value 1
        numberingHelper.NumberOfAnimationPlayed = 1;
        // initialize the MaxLimit with value 0
        numberingHelper.MaxLimit = 0;
    }
    public void NavigateToNextAnimation(bool input)
    {
        // check if MaxLimit is 0, set it to 10
        if (numberingHelper.MaxLimit == 0)
        {
            numberingHelper.MaxLimit = 10;
        }
        // check if input is true
        if (input)
        {
            // navigate to the URL with random animation and the file number
            navigationManager.NavigateTo($"RandomLottieAnimations/{lottieFileNumber}");
        }
        else
        {
            // navigate to the URL with cat animation and the file number
            navigationManager.NavigateTo($"CatsLottieAnimations/{lottieFileNumber}");
        }
    }
}
@*//TODO: read the count of animations from folder (server API needed -> not worth it), load animation with lazdy loading at index page so it can be used in offline, pinning "next animation" button to the bottom of the screen*@